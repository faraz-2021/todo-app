{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/practice/my-app/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst data = [{\n  text: 'abc',\n  id: 1,\n  check: false\n}, {\n  text: 'axyz',\n  id: 2,\n  check: true\n}];\n\nconst Todo = () => {\n  _s();\n\n  const [text, setText] = useState(''); // const [check, setCheck] = useState(false);\n\n  const [list, setList] = useState(data);\n\n  const textChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleClick = e => {\n    if (text.length > 0) {\n      // setList(list.concat(text));\n      setList(prevValue => {\n        return [...prevValue, {\n          text: text,\n          check: false,\n          key: Math.random().toString()\n        }];\n      }); // setList([...list,{value:text, key: Math.random().toString()}])\n    } else {\n      alert('error!', 'List name cannot be empty', [{\n        text: 'OK',\n        onPress: () => console.log('alert closed')\n      }]);\n    }\n\n    setText('');\n    e.preventDefault();\n  };\n\n  const listCompleted = () => {};\n\n  const setCheck = item => {\n    const newList = list.map(todo => {\n      if (todo.id == item.id) {\n        return { ...todo,\n          check: !todo.check\n        };\n      } else {\n        return { ...todo\n        };\n      }\n    });\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            border: \"none\"\n          },\n          value: text,\n          onChange: textChange,\n          placeholder: \"what do we do next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [list.map((item, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.check,\n            onChange: () => setCheck(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this), item.check ? /*#__PURE__*/_jsxDEV(\"del\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 64\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", list.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"nFws+Xi1+5/qLdQ2qFyNWeAPdcU=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/var/www/html/practice/my-app/src/todo.js"],"names":["React","useState","data","text","id","check","Todo","setText","list","setList","textChange","e","target","value","handleClick","length","prevValue","key","Math","random","toString","alert","onPress","console","log","preventDefault","listCompleted","setCheck","item","newList","map","todo","textAlign","border","width","height","display","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,MAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE,CAAnB;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADS,EAET;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,EAAE,EAAE,CAApB;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFS,CAAb;;AAMA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACd,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CADc,CAEd;;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACC,IAAD,CAAhC;;AAIA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACrB,QAAIR,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;AACjB;AACAN,MAAAA,OAAO,CAAEO,SAAD,IAAe;AACnB,eAAO,CACH,GAAGA,SADA,EAEH;AAAEb,UAAAA,IAAI,EAAEA,IAAR;AAAcE,UAAAA,KAAK,EAAE,KAArB;AAA4BY,UAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAjC,SAFG,CAAP;AAIH,OALM,CAAP,CAFiB,CAQjB;AACH,KATD,MAUK;AACDC,MAAAA,KAAK,CAAC,QAAD,EAAW,2BAAX,EAAwC,CACzC;AAAElB,QAAAA,IAAI,EAAE,IAAR;AAAcmB,QAAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA7B,OADyC,CAAxC,CAAL;AAGH;;AACDjB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,CAAC,CAACc,cAAF;AACH,GAlBD;;AAmBA,QAAMC,aAAa,GAAG,MAAM,CAC3B,CADD;;AAEA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMC,OAAO,GAAGrB,IAAI,CAACsB,GAAL,CAASC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAAC3B,EAAL,IAAWwB,IAAI,CAACxB,EAApB,EAAwB;AACpB,eAAO,EAAE,GAAG2B,IAAL;AAAW1B,UAAAA,KAAK,EAAE,CAAC0B,IAAI,CAAC1B;AAAxB,SAAP;AACH,OAFD,MAEO;AACH,eAAO,EAAE,GAAG0B;AAAL,SAAP;AACH;AACJ,KANe,CAAhB;AAOAtB,IAAAA,OAAO,CAACoB,OAAD,CAAP;AACH,GATD;;AAcA,sBACI;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACG,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAEnB,WAAhB;AAAA,+BACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE;AAACoB,YAAAA,KAAK,EAAC,OAAP;AAAeC,YAAAA,MAAM,EAAC,MAAtB;AAA6BF,YAAAA,MAAM,EAAC;AAApC,WAA1B;AAAuE,UAAA,KAAK,EAAE9B,IAA9E;AAAqF,UAAA,QAAQ,EAAEO,UAA/F;AAA2G,UAAA,WAAW,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAK,QAAA,KAAK,EAAE,EAAZ;AAAA,mBACKF,IAAI,CAACsB,GAAL,CAAS,CAACF,IAAD,EAAMxB,EAAN,kBACN;AAAK,UAAA,KAAK,EAAE;AAACgC,YAAAA,OAAO,EAAC,MAAT;AAAgBH,YAAAA,MAAM,EAAC;AAAvB,WAAZ;AAAA,kCACO;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAwB,YAAA,OAAO,EAAEL,IAAI,CAACvB,KAAtC;AACC,YAAA,QAAQ,EAAE,MAAMsB,QAAQ,CAACC,IAAD;AADzB;AAAA;AAAA;AAAA;AAAA,kBADP,EAGOA,IAAI,CAACvB,KAAL,gBAAa;AAAA,sBAAMuB,IAAI,CAACzB;AAAX;AAAA;AAAA;AAAA;AAAA,kBAAb,gBAAoC;AAAA,sBAAMyB,IAAI,CAACzB;AAAX;AAAA;AAAA;AAAA;AAAA,kBAH3C;AAAA,WAA4DC,EAA5D;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAQI;AAAK,UAAA,KAAK,EAAE;AAACgC,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,cAAc,EAAC;AAA/B,WAAZ;AAAA,kCACI;AAAA,4BAAU7B,IAAI,CAACO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,mCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAvGD;;GAAMT,I;;KAAAA,I;AAyGN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst data = [\n    { text: 'abc', id: 1, check: false },\n    { text: 'axyz', id: 2, check: true },\n]\n\n\nconst Todo = () =>{\n    const [text, setText] = useState('');\n    // const [check, setCheck] = useState(false);\n    const [list, setList] = useState(data);\n\n  \n\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const handleClick = e => {\n        if (text.length > 0) {\n            // setList(list.concat(text));\n            setList((prevValue) => {\n                return [\n                    ...prevValue,\n                    { text: text, check: false, key: Math.random().toString() }\n                ]\n            })\n            // setList([...list,{value:text, key: Math.random().toString()}])\n        }\n        else {\n            alert('error!', 'List name cannot be empty', [\n                { text: 'OK', onPress: () => console.log('alert closed') }\n            ]);\n        }\n        setText('');\n        e.preventDefault();\n    }\n    const listCompleted = () => {\n    }\n    const setCheck = (item) => {\n        const newList = list.map(todo => {\n            if (todo.id == item.id) {\n                return { ...todo, check: !todo.check }\n            } else {\n                return { ...todo }\n            }\n        })\n        setList(newList);\n    }\n  \n\n\n\n    return(\n        <div style={{}}>\n            <h1 style={{textAlign:\"center\"}}>todo</h1>\n            <div style={{border:\"1px solid black\"}}>\n            <form onSubmit={handleClick}>\n            <input type=\"text\" style={{width:\"300px\",height:\"40px\",border:\"none\"}} value={text}  onChange={textChange} placeholder=\"what do we do next\"/>\n            {/* <button  type=\"submit\">submit</button> */}\n            </form>\n            <div style={{}}>\n                {list.map((item,id)=>(\n                    <div style={{display:\"flex\",border:\"1px solid black\"}} key={id}>\n                           <input type=\"checkbox\"  checked={item.check}\n                            onChange={() => setCheck(item)}/>\n                          {item.check ? <del>{item.text}</del>:<div>{item.text}</div>}\n                    </div>\n                ))}\n                <div style={{display:\"flex\",justifyContent:\"\"}}>\n                    <label> { list.length}</label>\n                    <div><span>All</span></div>\n                    <button><span>Active</span></button>\n                    <div ><span>Completed</span></div>\n                </div></div>\n            </div>\n          \n\n            {/* <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <div>selected</div>\n                <div>All</div>\n                <button>Active</button>\n                <div>completed</div>\n\n            </div> */}\n            {/* <h3>Todo App</h3>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check} onClick={()=>(setCheck(!check))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> abc</label>\n                </div>\n                <div>\n                {check ? \"completed\":null}\n                </div>\n            </div>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check2} onClick={()=>(setCheck2(!check2))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> xyz</label>\n                </div>\n                <div>\n                {check2 ? \"completed\":null}\n                </div>\n            </div>\n            <br/>\n            <button>Submit</button> */}\n        </div>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}