{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/practice/my-app/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst Todo = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [check, setCheck] = useState(false);\n  const [list, setList] = useState([]);\n\n  const handleClick = e => {\n    if (text) {\n      setList(list.concat(text)); // setList((list)=> {\n      //     return[ ...list,{text:text,key:Math.random().toString()}]\n      // })\n    }\n\n    setText('');\n    e.preventDefault();\n  };\n\n  const textChange = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            border: \"none\",\n            fontSize: \"20px\",\n            fontFamily: \"italic\"\n          },\n          value: text,\n          onChange: textChange,\n          placeholder: \"what do we do next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [list.map((i, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            border: \"1px solid black\",\n            width: \"300px\",\n            height: \"40px\",\n            fontSize: \"20px\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: check,\n            onClick: () => setCheck(!check)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this), check ? /*#__PURE__*/_jsxDEV(\"del\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", list.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"MCQs9vjZAZAcUVXxGuP9hCW8suA=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/var/www/html/practice/my-app/src/todo.js"],"names":["React","useState","Todo","text","setText","check","setCheck","list","setList","handleClick","e","concat","preventDefault","textChange","target","value","textAlign","border","width","height","fontSize","fontFamily","map","i","key","display","alignItems","justifyContent","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\n\n\n\nconst Todo = () =>{\n    const [text, setText] = useState('');\n    const [check, setCheck] = useState(false);\n    const [list, setList] = useState([]);\n\n    const handleClick =(e)=>{\n        if(text){\n            setList(list.concat(text))\n            // setList((list)=> {\n            //     return[ ...list,{text:text,key:Math.random().toString()}]\n            // })\n        }\n        setText('');\n        e.preventDefault();\n    }\n\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n\n  \n\n\n\n    return(\n        <div style={{}}>\n            <h1 style={{textAlign:\"center\"}}>todo</h1>\n            <div style={{border:\"1px solid black\"}}>\n            <form onSubmit={handleClick}>\n            <input type=\"text\" style={{width:\"300px\",height:\"40px\",border:\"none\",fontSize:\"20px\",fontFamily:\"italic\"}} value={text}  onChange={textChange} placeholder=\"what do we do next\"/>\n            {/* <button  type=\"submit\">submit</button> */}\n            </form>\n            <div style={{}}>\n                {list.map((i,key)=>(\n                    <div style={{display:\"flex\",border:\"1px solid black\",width:\"300px\",height:\"40px\",fontSize:\"20px\",alignItems:\"center\"}}>\n                           <input type=\"checkbox\" checked={check} onClick={()=>(setCheck(!check))}/>\n                          {check ? <del>{i}</del>:<div>{i}</div>}\n                    </div>\n                ))}\n                <div style={{display:\"flex\",justifyContent:\"space-around\"}}>\n                    <label> { list.length}</label>\n                    <div><span>All</span></div>\n                    <button><span>Active</span></button>\n                    <div><span>Completed</span></div>\n                </div></div>\n            </div>\n          \n\n            {/* <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <div>selected</div>\n                <div>All</div>\n                <button>Active</button>\n                <div>completed</div>\n\n            </div> */}\n            {/* <h3>Todo App</h3>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check} onClick={()=>(setCheck(!check))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> abc</label>\n                </div>\n                <div>\n                {check ? \"completed\":null}\n                </div>\n            </div>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check2} onClick={()=>(setCheck2(!check2))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> xyz</label>\n                </div>\n                <div>\n                {check2 ? \"completed\":null}\n                </div>\n            </div>\n            <br/>\n            <button>Submit</button> */}\n        </div>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}