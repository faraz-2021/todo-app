{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/paractice/todo-app/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst initialList = ['Learn React', 'Learn Firebase', 'Learn GraphQL'];\n\nconst Search = () => {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [list, setList] = React.useState(initialList);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    if (value) {\n      setList(list.concat(value));\n    }\n\n    setValue('');\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"J5wI3KXaY6AxMz/7AGbXuOXc03A=\");\n\n_c = Search;\nexport default Search; // const Search = () => {\n//   const [input, setInput] = useState('');\n//   return (\n//     <div>\n//     <label>Please specify:</label>\n//     <input value={input} onInput={e => setInput(e.target.value)}/>\n//     </div>\n//   );\n// }\n// const [showResults, setShowResults] = React.useState(false)\n// const onClick = () => setShowResults(true)\n// return (\n//   <div>\n//     <input type=\"submit\" value=\"Search\" onClick={onClick} />\n//     { showResults ? <Results /> : null }\n//   </div>\n// )\n// const Results = () => (\n//   <div id=\"results\" className=\"search-results\">\n//     Some Results\n//   </div>\n// )\n// export default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/var/www/paractice/todo-app/src/Search.js"],"names":["React","useState","initialList","Search","value","setValue","list","setList","handleChange","event","target","handleSubmit","concat","preventDefault","map","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,MAAMC,WAAW,GAAG,CAClB,aADkB,EAElB,gBAFkB,EAGlB,eAHkB,CAApB;;AAMA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACC,QAAN,CAAeC,WAAf,CAAxB;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAGF,KAAK,IAAI;AAC5B,QAAIL,KAAJ,EAAW;AACTG,MAAAA,OAAO,CAACD,IAAI,CAACM,MAAL,CAAYR,KAAZ,CAAD,CAAP;AACD;;AAEDC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEAI,IAAAA,KAAK,CAACI,cAAN;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA,gBACGP,IAAI,CAACQ,GAAL,CAASC,IAAI,iBACZ;AAAA,kBAAgBA;AAAhB,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEP,KAA1B;AAAiC,QAAA,QAAQ,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhCD;;GAAML,M;;KAAAA,M;AAkCN,eAAeA,MAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AACA;AACA;AACA;AAEF","sourcesContent":["import React, {useState} from 'react'\nconst initialList = [\n  'Learn React',\n  'Learn Firebase',\n  'Learn GraphQL',\n];\n \nconst Search = () => {\n  const [value, setValue] = React.useState('');\n  const [list, setList] = React.useState(initialList);\n \n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n \n  const handleSubmit = event => {\n    if (value) {\n      setList(list.concat(value));\n    }\n \n    setValue('');\n \n    event.preventDefault();\n  };\n \n  return (\n    <div>\n      <ul>\n        {list.map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n \n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <button type=\"submit\">Add Item</button>\n      </form>\n    </div>\n  );\n};\n \nexport default Search;\n\n// const Search = () => {\n\n//   const [input, setInput] = useState('');\n//   return (\n//     <div>\n//     <label>Please specify:</label>\n//     <input value={input} onInput={e => setInput(e.target.value)}/>\n//     </div>\n//   );\n// }\n    // const [showResults, setShowResults] = React.useState(false)\n    // const onClick = () => setShowResults(true)\n    // return (\n    //   <div>\n    //     <input type=\"submit\" value=\"Search\" onClick={onClick} />\n    //     { showResults ? <Results /> : null }\n    //   </div>\n    // )\n  \n  \n  // const Results = () => (\n  //   <div id=\"results\" className=\"search-results\">\n  //     Some Results\n  //   </div>\n  // )\n\n// export default Search;"]},"metadata":{},"sourceType":"module"}