{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/practice/my-app/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst data = [{\n  text: 'abc',\n  id: 1,\n  check: false\n}, {\n  text: 'axyz',\n  id: 2,\n  check: true\n}];\n\nconst Todo = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [list, setList] = useState(data);\n  const [tab, setTab] = useState('');\n\n  const textChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleClick = e => {\n    if (text) {\n      // setList(list.concat(text));\n      setList(prevValue => {\n        return [...prevValue, {\n          text: text,\n          check: false,\n          id: Math.random().toString()\n        }];\n      }); // setList([...list,{value:text, key: Math.random().toString()}])\n    }\n\n    setText('');\n    e.preventDefault();\n  }; // const listCompleted = (item) => {\n  //    let listData = list.filter(item=>{\n  //         if(item.check){\n  //             return item\n  //            }\n  //     })\n  //     setList(listData)\n  //     console.log(listData)\n  //   }\n  //   const notCompleted = (item) => {\n  //     let listData1 = list.filter(item=>{\n  //          if(!item.check){\n  //              return item\n  //             }\n  //      })\n  //      setList(listData1)\n  //      console.log(listData1)\n  //    }\n  //   const allList = (item) =>{\n  //       let allListData = list.filter(item=>{\n  //           if(item.text){\n  //               return item\n  //           }\n  //       })\n  //       console.log(item)\n  //   }\n\n\n  const filterList = () => {};\n\n  const setCheck = item => {\n    const newList = list.map(todo => {\n      if (todo.id == item.id) {\n        return { ...todo,\n          check: !todo.check\n        };\n      } else {\n        return { ...todo\n        };\n      }\n    });\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            border: \"none\"\n          },\n          value: text,\n          onChange: textChange,\n          placeholder: \"what do we do next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [list.filter(item => {\n          if (tab === 'completed' && item.check) {\n            return setList(item);\n          }\n\n          if (tab === 'all') {\n            return setList(...item, item);\n          }\n        }).map((item, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.check,\n            onChange: () => setCheck(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 28\n          }, this), item.check ? /*#__PURE__*/_jsxDEV(\"del\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 64\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", list.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setTab('all'),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 115\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setTab('completed'),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"clear completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"MdlSqoiUPRWU8ZXAou3HIVjPcro=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/var/www/html/practice/my-app/src/todo.js"],"names":["React","useState","data","text","id","check","Todo","setText","list","setList","tab","setTab","textChange","e","target","value","handleClick","prevValue","Math","random","toString","preventDefault","filterList","setCheck","item","newList","map","todo","textAlign","border","width","height","filter","display","justifyContent","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst data = [\n    { text: 'abc', id: 1, check: false },\n    { text: 'axyz', id: 2, check: true },\n]\n\n\nconst Todo = () =>{\n    const [text, setText] = useState('');\n    const [list, setList] = useState(data);\n    const [tab, setTab] = useState('')\n    \n  \n\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const handleClick = e => {\n        if (text) {\n            // setList(list.concat(text));\n            setList((prevValue) => {\n                return [\n                    ...prevValue,\n                    { text: text, check: false, id: Math.random().toString() }\n                ]\n            })\n            // setList([...list,{value:text, key: Math.random().toString()}])\n        }\n       \n        setText('');\n        e.preventDefault();\n    }\n    // const listCompleted = (item) => {\n    //    let listData = list.filter(item=>{\n    //         if(item.check){\n    //             return item\n    //            }\n    //     })\n    //     setList(listData)\n    //     console.log(listData)\n    //   }\n\n    //   const notCompleted = (item) => {\n    //     let listData1 = list.filter(item=>{\n    //          if(!item.check){\n    //              return item\n    //             }\n    //      })\n    //      setList(listData1)\n    //      console.log(listData1)\n    //    }\n\n\n    //   const allList = (item) =>{\n    //       let allListData = list.filter(item=>{\n    //           if(item.text){\n    //               return item\n    //           }\n    //       })\n    //       console.log(item)\n    //   }\n\n\n    const filterList = () =>{\n\n    }\n\n     \n\n  \n    const setCheck = (item) => {\n        const newList = list.map(todo => {\n            if (todo.id == item.id) {\n                return { ...todo, check: !todo.check }\n            } else {\n                return { ...todo }\n            }\n        })\n        setList(newList);\n    }\n  \n\n\n\n    return(\n        <div style={{}}>\n            <h1 style={{textAlign:\"center\"}}>todo</h1>\n            <div style={{border:\"1px solid black\"}}>\n            <form onSubmit={handleClick}>\n            <input type=\"text\" style={{width:\"300px\",height:\"40px\",border:\"none\"}} value={text}  onChange={textChange} placeholder=\"what do we do next\"/>\n            {/* <button  type=\"submit\">submit</button> */}\n            </form>\n            <div style={{}}>\n                {list.filter(item=>{\n                    if(tab==='completed' && item.check){\n                        return setList(item)\n                    }\n                    if(tab==='all'){\n                        return setList(...item,item)\n                    }\n                }).map((item,id)=>(\n                    <div style={{display:\"flex\",border:\"1px solid black\"}} key={id}>\n                           <input type=\"checkbox\"  checked={item.check}\n                            onChange={() => setCheck(item)}/>\n                          {item.check ? <del>{item.text}</del>:<div>{item.text}</div>}\n                    </div>\n                ))}\n                <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <label> { list.length}</label>\n                    <div style={{display:\"flex\",justifyContent:\"space-between\"}}><div onClick={()=>setTab('all')}><span>All</span></div>\n                    <button onClick={\"\"}><span>Active</span></button>\n                    <div onClick={()=>setTab('completed')}><span>Completed</span></div>\n                    </div>\n                    <div>clear completed</div>\n                    \n                </div></div>\n            </div>\n          \n\n            {/* <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <div>selected</div>\n                <div>All</div>\n                <button>Active</button>\n                <div>completed</div>\n\n            </div> */}\n            {/* <h3>Todo App</h3>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check} onClick={()=>(setCheck(!check))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> abc</label>\n                </div>\n                <div>\n                {check ? \"completed\":null}\n                </div>\n            </div>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check2} onClick={()=>(setCheck2(!check2))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> xyz</label>\n                </div>\n                <div>\n                {check2 ? \"completed\":null}\n                </div>\n            </div>\n            <br/>\n            <button>Submit</button> */}\n        </div>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}