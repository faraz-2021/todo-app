{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/practice/my-app/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst data = [{\n  value: \"first\",\n  id: 1,\n  check: false\n}, {\n  value: \"second\",\n  id: 2,\n  check: false\n}];\n\nconst Todo = () => {\n  _s();\n\n  const [text, setText] = useState(''); // const [check, setCheck] = useState(false);\n\n  const [list, setList] = useState(data);\n\n  const textChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"400px\",\n            height: \"40px\",\n            border: \"none\",\n            fontSize: \"20px\"\n          },\n          value: text,\n          onChange: textChange,\n          placeholder: \"what do we do next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [list.map((i, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            border: \"1px solid black\",\n            width: \"400px\",\n            height: \"40px\",\n            fontSize: \"20px\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: i.check\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: i.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", list.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"40%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Clear completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"nFws+Xi1+5/qLdQ2qFyNWeAPdcU=\");\n\n_c = Todo;\nexport default Todo; // const handleClick =(e)=>{\n//     if(text){\n// setList(list.concat(text))\n// setList((list)=> {\n//     return[ ...list,{text:text,key:Math.random().toString()}]\n// })\n//     }\n//     setText('');\n//     e.preventDefault();\n//     console.log(list)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/var/www/html/practice/my-app/src/todo.js"],"names":["React","useState","data","value","id","check","Todo","text","setText","list","setList","textChange","e","target","handleClick","textAlign","border","width","height","fontSize","map","i","key","display","alignItems","justifyContent","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,MAAMC,IAAI,GAAG,CACT;AACIC,EAAAA,KAAK,EAAC,OADV;AAEIC,EAAAA,EAAE,EAAC,CAFP;AAGIC,EAAAA,KAAK,EAAC;AAHV,CADS,EAMT;AACIF,EAAAA,KAAK,EAAC,QADV;AAEIC,EAAAA,EAAE,EAAC,CAFP;AAGIC,EAAAA,KAAK,EAAC;AAHV,CANS,CAAb;;AAeA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CADc,CAEd;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACC,IAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASV,KAAV,CAAP;AACH,GAFD;;AAGH,QAAMW,WAAW,GAAE,MAAK,CAEvB,CAFD;;AAKG,sBACI;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAEF,WAAhB;AAAA,+BACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAC,OAAP;AAAeC,YAAAA,MAAM,EAAC,MAAtB;AAA6BF,YAAAA,MAAM,EAAC,MAApC;AAA2CG,YAAAA,QAAQ,EAAC;AAApD,WAA1B;AAAuF,UAAA,KAAK,EAAEZ,IAA9F;AAAqG,UAAA,QAAQ,EAAEI,UAA/G;AAA2H,UAAA,WAAW,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAK,QAAA,KAAK,EAAE,EAAZ;AAAA,mBACKF,IAAI,CAACW,GAAL,CAAS,CAACC,CAAD,EAAGC,GAAH,kBACN;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAC,MAAT;AAAgBP,YAAAA,MAAM,EAAC,iBAAvB;AAAyCC,YAAAA,KAAK,EAAC,OAA/C;AAAuDC,YAAAA,MAAM,EAAC,MAA9D;AAAqEC,YAAAA,QAAQ,EAAC,MAA9E;AAAqFK,YAAAA,UAAU,EAAC;AAAhG,WAAZ;AAAA,kCACO;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEH,CAAC,CAAChB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADP,eAEI;AAAA,sBAAMgB,CAAC,CAAClB;AAAR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAOI;AAAK,UAAA,KAAK,EAAE;AAACoB,YAAAA,OAAO,EAAC,MAAT;AAAgBE,YAAAA,cAAc,EAAC;AAA/B,WAAZ;AAAA,kCACI;AAAA,4BAAUhB,IAAI,CAACiB,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAE;AAACH,cAAAA,OAAO,EAAC,MAAT;AAAgBE,cAAAA,cAAc,EAAC,eAA/B;AAA+CR,cAAAA,KAAK,EAAC;AAArD,aAAZ;AAAA,oCACA;AAAA,qCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,qCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,qCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI;AAAA,mCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA5CD;;GAAMX,I;;KAAAA,I;AA8CN,eAAeA,IAAf,C,CACE;AACE;AACQ;AACA;AACA;AACA;AACR;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\n\nconst data = [\n    {\n        value:\"first\",\n        id:1,\n        check:false\n    },\n    {\n        value:\"second\",\n        id:2,\n        check:false\n    }\n]\n\n\n\nconst Todo = () =>{\n    const [text, setText] = useState('');\n    // const [check, setCheck] = useState(false);\n    const [list, setList] = useState(data);\n    \n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n const handleClick= () =>{\n\n }\n\n\n    return(\n        <div style={{}}>\n            <h1 style={{textAlign:\"center\"}}>todo</h1>\n            <div style={{border:\"1px solid black\"}}>\n            <form onSubmit={handleClick}>\n            <input type=\"text\" style={{width:\"400px\",height:\"40px\",border:\"none\",fontSize:\"20px\"}} value={text}  onChange={textChange} placeholder=\"what do we do next\"/>\n            {/* <button  type=\"submit\">submit</button> */}\n            </form>\n            <div style={{}}>\n                {list.map((i,key)=>(\n                    <div style={{display:\"flex\",border:\"1px solid black\",width:\"400px\",height:\"40px\",fontSize:\"20px\",alignItems:\"center\"}}>\n                           <input type=\"checkbox\" checked={i.check} />\n                        <div>{i.value}</div>\n                    </div>\n                ))}\n                <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <label> { list.length}</label>\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"40%\"}}>\n                    <div><span>All</span></div>\n                    <button><span>Active</span></button>\n                    <div><span>Completed</span></div>\n                    </div>\n                    <div><span>Clear completed</span></div>\n                   \n                </div></div>\n            </div>\n          \n\n          \n        </div>\n    )\n}\n\nexport default Todo;\n  // const handleClick =(e)=>{\n    //     if(text){\n            // setList(list.concat(text))\n            // setList((list)=> {\n            //     return[ ...list,{text:text,key:Math.random().toString()}]\n            // })\n    //     }\n    //     setText('');\n    //     e.preventDefault();\n    //     console.log(list)\n    // }"]},"metadata":{},"sourceType":"module"}