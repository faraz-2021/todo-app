{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/practice/my-app/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst data = [{\n  text: 'abc',\n  id: 1,\n  check: false\n}, {\n  text: 'axyz',\n  id: 2,\n  check: true\n}];\n\nconst Todo = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [list, setList] = useState(data);\n  const [filter, setFilter] = useState([]);\n\n  const textChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleClick = e => {\n    if (text) {\n      setList(prevValue => {\n        return [...prevValue, {\n          text: text,\n          check: false,\n          id: Math.random().toString()\n        }];\n      });\n    }\n\n    setText('');\n    e.preventDefault();\n  };\n\n  const listCompleted = () => {\n    setFilter(list);\n    let listData = list.filter(item => {\n      if (item.check) {\n        return item;\n      }\n    });\n    setList(listData);\n    console.log(listData);\n  };\n\n  const Active = () => {\n    setFilter(list);\n    let listData = list.filter(item => {\n      if (!item.check) {\n        return item;\n      }\n    });\n    setList(listData);\n    console.log(listData);\n  };\n\n  const setCheck = item => {\n    const newList = list.map(todo => {\n      if (todo.id == item.id) {\n        return { ...todo,\n          check: !todo.check\n        };\n      } else {\n        return { ...todo\n        };\n      }\n    });\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"300px\",\n            height: \"40px\",\n            border: \"none\"\n          },\n          value: text,\n          onChange: textChange,\n          placeholder: \"what do we do next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [list.map((item, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            border: \"1px solid black\",\n            width: \"300px\",\n            height: \"40px\",\n            alignItems: \"center\",\n            fontSize: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.check,\n            onChange: () => setCheck(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 28\n          }, this), item.check ? /*#__PURE__*/_jsxDEV(\"del\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 64\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", list.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setList(filter),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: Active,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: listCompleted,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: Clear,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Clear completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"85sprin66P91X/owmr3EmlqQRbU=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/var/www/html/practice/my-app/src/todo.js"],"names":["React","useState","data","text","id","check","Todo","setText","list","setList","filter","setFilter","textChange","e","target","value","handleClick","prevValue","Math","random","toString","preventDefault","listCompleted","listData","item","console","log","Active","setCheck","newList","map","todo","textAlign","border","width","height","display","alignItems","fontSize","justifyContent","length","Clear"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst data = [\n    { text: 'abc', id: 1, check: false },\n    { text: 'axyz', id: 2, check: true },\n]\n\n\nconst Todo = () =>{\n    const [text, setText] = useState('');\n    const [list, setList] = useState(data);\n    const [filter, setFilter] = useState([]);\n  \n\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const handleClick = e => {\n        if (text) {\n            setList((prevValue) => {\n                return [\n                    ...prevValue,\n                    { text: text, check: false, id: Math.random().toString() }\n                ]\n            })\n        }\n       \n        setText('');\n        e.preventDefault();\n    }\n    const listCompleted = () => {\n        setFilter(list)\n       let listData = list.filter(item=>{\n            if(item.check){\n                return item\n               }\n        })\n        \n        setList(listData)\n        console.log(listData)\n      }\n\n      const Active = ()=>{\n        setFilter(list)\n       let listData = list.filter(item=>{\n            if(!item.check){\n                return item\n               }\n        })\n        \n        setList(listData)\n        console.log(listData)\n      }\n    \n     \n\n  \n    const setCheck = (item) => {\n        const newList = list.map(todo => {\n            if (todo.id == item.id) {\n                return { ...todo, check: !todo.check }\n            } else {\n                return { ...todo }\n            }\n        })\n        setList(newList);\n    }\n  \n\n\n\n    return(\n        <div style={{}}>\n            <h1 style={{textAlign:\"center\"}}>todo</h1>\n            <div style={{border:\"1px solid black\"}}>\n            <form onSubmit={handleClick}>\n            <input type=\"text\" style={{width:\"300px\",height:\"40px\",border:\"none\"}} value={text}  onChange={textChange} placeholder=\"what do we do next\"/>\n            {/* <button  type=\"submit\">submit</button> */}\n            </form>\n            <div style={{}}>\n                {list.map((item,id)=>(\n                     <div style={{display:\"flex\",border:\"1px solid black\",width:\"300px\",height:\"40px\",alignItems:\"center\",fontSize:\"20px\"}} key={id}>\n                           <input type=\"checkbox\"  checked={item.check}\n                            onChange={() => setCheck(item)}/>\n                          {item.check ? <del>{item.text}</del>:<div>{item.text}</div>}\n                    </div>\n                ))}\n                <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                    <label> { list.length}</label>\n                    <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <div onClick={()=>(setList(filter))}><span>All</span></div>\n                    <button onClick={Active}><span>Active</span></button>\n                    <div onClick={listCompleted}><span>Completed</span></div>\n                    </div>\n                    <div onClick={Clear}><span>Clear completed</span></div>\n                </div>\n                </div>\n            </div>\n          \n\n            {/* <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <div>selected</div>\n                <div>All</div>\n                <button>Active</button>\n                <div>completed</div>\n\n            </div> */}\n            {/* <h3>Todo App</h3>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check} onClick={()=>(setCheck(!check))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> abc</label>\n                </div>\n                <div>\n                {check ? \"completed\":null}\n                </div>\n            </div>\n            <div style={{border:\"solid black\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\n                <div >\n                <input type=\"checkbox\" checked={check2} onClick={()=>(setCheck2(!check2))}/>\n                <div onClick={()=>(setCheck(!check))}>click me</div>\n                <label> xyz</label>\n                </div>\n                <div>\n                {check2 ? \"completed\":null}\n                </div>\n            </div>\n            <br/>\n            <button>Submit</button> */}\n        </div>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}